name: Python Layer
on:
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Artifact name'
        required: true
        default: 'cosq-python-layer'
      s3_bucket:
        description: 'S3 Bucket'
        required: true
        default: 'cosq-layers-dev'
      env_name:
        description: 'Name of the environment'
        required: false
        type: string
        default: 'dev'

jobs:
  build-layer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependiencies
        run: |
          mkdir -p ${{ inputs.artifact_name }}-${{ inputs.env_name }}/python/lib/python3.10/site-packages
          pip install -t ${{ inputs.artifact_name }}-${{ inputs.env_name }}/python/lib/python3.10/site-packages psycopg2-binary
          pip install -t ${{ inputs.artifact_name }}-${{ inputs.env_name }}/python/lib/python3.10/site-packages requests "urllib3<2"
          pip install -t ${{ inputs.artifact_name }}-${{ inputs.env_name }}/python/lib/python3.10/site-packages Pillow
          cp ${{ github.workspace }}/utilities.py ${{ inputs.artifact_name }}-${{ inputs.env_name }}/python/
        shell: bash

      - name: Create Archive
        run: |
          cd ${{ inputs.artifact_name }}-${{ inputs.env_name }}
          zip -r ../${{ inputs.artifact_name }}-${{ inputs.env_name }}.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact_name }}-${{ inputs.env_name }}
          path: ${{ inputs.artifact_name }}-${{ inputs.env_name }}.zip

  deploy-layer:
    needs: build-layer
    uses: cosq-network/common-workflows/.github/workflows/deploy-layer.yml@main
    with:
      artifact_name: ${{ inputs.artifact_name }}
      archive: ${{ inputs.artifact_name }}-${{ inputs.env_name }}.zip
      layer_name: ${{ inputs.artifact_name }}
      S3Key: ${{ inputs.artifact_name }}-${{ inputs.env_name }}.zip
      S3Bucket: ${{ inputs.s3_bucket }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_REGION_DEV }}
      env_name: ${{ inputs.env_name }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
